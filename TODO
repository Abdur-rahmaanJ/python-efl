
BUGS:

* Evas: smart object doesn't work
* Elm: remove tooltips.pxi
* Using the string conversion functions will leave dangling a pointer if
  reference to the python string object is lost.
* convert_python_list_strings_to_array_of_strings does not free the data
  and we cannot always rely on C API to clean it up.

TODO:

* ecore.Poller
* ecore.FileMonitor
* alert on signal and subprocess module usage (was in python-ecore/ecore/__init__.py)
* evas.SmartObject
* edje.Edit
* edje: complete the unit tests
* elm.Web need a test
* elm.GestureLayer need a test
* elm.PhotoCam need a test
* elm.Transit need a test
* elm.Conformant need a test
* include python-ethumb
* include python-e_dbus (or make edbus2 ??)
* elm.Notify align_set/get/prop
* cleanup elementary_object
* Investigate the string reference problem.

  Possible solutions:
   - memcpy the string, can we reliably prevent it from leaking?
   - incref the string object, can we reliably decref after use?
   - use eina stringshare, some APIs actually seem to expect this instead of a
     normal char array and call eina_stringshare_del when freeing
     the object/struct.
* Investigate convert_python_list_strings_to_array_of_strings
* Review the internal functions and name them consistently
* Find out the minimum Cython version required

STUFF LEFT OUT:

* EcoreEvas
* EcoreImf
* EcoreX
* EcoreWin32
* python-evas/evas/utils.py
* python-evas/evas/decorators.py
* python-evas/evas/debug.py
* python-evas old hack to rotate objects
* edje decorators callbacks


CHANGES FROM 1.7 to 1.8:

* added efl container package
* ecore.file.Download => efl.ecore.FileDownload
* Emotion(module_filename="xxx") => Emotion(module_name="xxx")
* elementary.need_e_dbus => elementary.need_e_dbus
* elm.domain_translatable_text_part_set => elm.domain_translatable_part_text_set
* elm.Scroller.custom_widget_base_theme_set =>  elm.Layout.theme_set             TODO is this right?
* elm.notify.orient_set/get/prop removed  =>  align_set (TODO)

